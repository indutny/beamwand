#[deriving(Eq)]
pub enum Opcode {
  Label = 1,
  Func_info = 2,
  Int_code_end = 3,
  Call = 4,
  Call_last = 5,
  Call_only = 6,
  Call_ext = 7,
  Call_ext_last = 8,
  Bif0 = 9,
  Bif1 = 10,
  Bif2 = 11,
  Allocate = 12,
  Allocate_heap = 13,
  Allocate_zero = 14,
  Allocate_heap_zero = 15,
  Test_heap = 16,
  Init = 17,
  Deallocate = 18,
  Return = 19,
  Send = 20,
  Remove_message = 21,
  Timeout = 22,
  Loop_rec = 23,
  Loop_rec_end = 24,
  Wait = 25,
  Wait_timeout = 26,
  Is_lt = 39,
  Is_ge = 40,
  Is_eq = 41,
  Is_ne = 42,
  Is_eq_exact = 43,
  Is_ne_exact = 44,
  Is_integer = 45,
  Is_float = 46,
  Is_number = 47,
  Is_atom = 48,
  Is_pid = 49,
  Is_reference = 50,
  Is_port = 51,
  Is_nil = 52,
  Is_binary = 53,
  Is_list = 55,
  Is_nonempty_list = 56,
  Is_tuple = 57,
  Test_arity = 58,
  Select_val = 59,
  Select_tuple_arity = 60,
  Jump = 61,
  Catch = 62,
  Catch_end = 63,
  Move = 64,
  Get_list = 65,
  Get_tuple_element = 66,
  Set_tuple_element = 67,
  Put_list = 69,
  Put_tuple = 70,
  Put = 71,
  Badmatch = 72,
  If_end = 73,
  Case_end = 74,
  Call_fun = 75,
  Is_function = 77,
  Call_ext_only = 78,
  Bs_put_integer = 89,
  Bs_put_binary = 90,
  Bs_put_float = 91,
  Bs_put_string = 92,
  Fclearerror = 94,
  Fcheckerror = 95,
  Fmove = 96,
  Fconv = 97,
  Fadd = 98,
  Fsub = 99,
  Fmul = 100,
  Fdiv = 101,
  Fnegate = 102,
  Make_fun2 = 103,
  Try = 104,
  Try_end = 105,
  Try_case = 106,
  Try_case_end = 107,
  Raise = 108,
  Bs_init2 = 109,
  Bs_add = 111,
  Apply = 112,
  Apply_last = 113,
  Is_boolean = 114,
  Is_function2 = 115,
  Bs_start_match2 = 116,
  Bs_get_integer2 = 117,
  Bs_get_float2 = 118,
  Bs_get_binary2 = 119,
  Bs_skip_bits2 = 120,
  Bs_test_tail2 = 121,
  Bs_save2 = 122,
  Bs_restore2 = 123,
  Gc_bif1 = 124,
  Gc_bif2 = 125,
  Is_bitstr = 129,
  Bs_context_to_binary = 130,
  Bs_test_unit = 131,
  Bs_match_string = 132,
  Bs_init_writable = 133,
  Bs_append = 134,
  Bs_private_append = 135,
  Trim = 136,
  Bs_init_bits = 137,
  Bs_get_utf8 = 138,
  Bs_skip_utf8 = 139,
  Bs_get_utf16 = 140,
  Bs_skip_utf16 = 141,
  Bs_get_utf32 = 142,
  Bs_skip_utf32 = 143,
  Bs_utf8_size = 144,
  Bs_put_utf8 = 145,
  Bs_utf16_size = 146,
  Bs_put_utf16 = 147,
  Bs_put_utf32 = 148,
  On_load = 149,
  Recv_mark = 150,
  Recv_set = 151,
  Gc_bif3 = 152,
  Line = 153,
  MaxOpcode
}

pub fn get_arity(op: Opcode) -> uint {
  match op {
    Label => 1,
    Func_info => 3,
    Int_code_end => 0,
    Call => 2,
    Call_last => 3,
    Call_only => 2,
    Call_ext => 2,
    Call_ext_last => 3,
    Bif0 => 2,
    Bif1 => 4,
    Bif2 => 5,
    Allocate => 2,
    Allocate_heap => 3,
    Allocate_zero => 2,
    Allocate_heap_zero => 3,
    Test_heap => 2,
    Init => 1,
    Deallocate => 1,
    Return => 0,
    Send => 0,
    Remove_message => 0,
    Timeout => 0,
    Loop_rec => 2,
    Loop_rec_end => 1,
    Wait => 1,
    Wait_timeout => 2,
    Is_lt => 3,
    Is_ge => 3,
    Is_eq => 3,
    Is_ne => 3,
    Is_eq_exact => 3,
    Is_ne_exact => 3,
    Is_integer => 2,
    Is_float => 2,
    Is_number => 2,
    Is_atom => 2,
    Is_pid => 2,
    Is_reference => 2,
    Is_port => 2,
    Is_nil => 2,
    Is_binary => 2,
    Is_list => 2,
    Is_nonempty_list => 2,
    Is_tuple => 2,
    Test_arity => 3,
    Select_val => 3,
    Select_tuple_arity => 3,
    Jump => 1,
    Catch => 2,
    Catch_end => 1,
    Move => 2,
    Get_list => 3,
    Get_tuple_element => 3,
    Set_tuple_element => 3,
    Put_list => 3,
    Put_tuple => 2,
    Put => 1,
    Badmatch => 1,
    If_end => 0,
    Case_end => 1,
    Call_fun => 1,
    Is_function => 2,
    Call_ext_only => 2,
    Bs_put_integer => 5,
    Bs_put_binary => 5,
    Bs_put_float => 5,
    Bs_put_string => 2,
    Fclearerror => 0,
    Fcheckerror => 1,
    Fmove => 2,
    Fconv => 2,
    Fadd => 4,
    Fsub => 4,
    Fmul => 4,
    Fdiv => 4,
    Fnegate => 3,
    Make_fun2 => 1,
    Try => 2,
    Try_end => 1,
    Try_case => 1,
    Try_case_end => 1,
    Raise => 2,
    Bs_init2 => 6,
    Bs_add => 5,
    Apply => 1,
    Apply_last => 2,
    Is_boolean => 2,
    Is_function2 => 3,
    Bs_start_match2 => 5,
    Bs_get_integer2 => 7,
    Bs_get_float2 => 7,
    Bs_get_binary2 => 7,
    Bs_skip_bits2 => 5,
    Bs_test_tail2 => 3,
    Bs_save2 => 2,
    Bs_restore2 => 2,
    Gc_bif1 => 5,
    Gc_bif2 => 6,
    Is_bitstr => 2,
    Bs_context_to_binary => 1,
    Bs_test_unit => 3,
    Bs_match_string => 4,
    Bs_init_writable => 0,
    Bs_append => 8,
    Bs_private_append => 6,
    Trim => 2,
    Bs_init_bits => 6,
    Bs_get_utf8 => 5,
    Bs_skip_utf8 => 4,
    Bs_get_utf16 => 5,
    Bs_skip_utf16 => 4,
    Bs_get_utf32 => 5,
    Bs_skip_utf32 => 4,
    Bs_utf8_size => 3,
    Bs_put_utf8 => 3,
    Bs_utf16_size => 3,
    Bs_put_utf16 => 3,
    Bs_put_utf32 => 3,
    On_load => 0,
    Recv_mark => 1,
    Recv_set => 1,
    Gc_bif3 => 7,
    Line => 1,
    MaxOpcode => fail!(~"Incorrect opcode")
  }
}
